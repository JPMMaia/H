=========================
Break expressions
=========================

module Break_expressions;

import C.stdio as stdio;

function print_integer(value: Int32) -> ()
{
    stdio.printf("%d"c, value);
}

export function run_breaks(size: Int32) -> ()
{
    for index in 0 to size
    {
        if index > 4
        {
            break;
        }

        print_integer(index);
    }

    for index in 0 to size
    {
        mutable index_2 = 0;

        while index_2 < size
        {
            if index > 3
            {
                break;
            }

            print_integer(index_2);
            index += 1;
        }

        print_integer(index);
    }

    for index in 0 to size
    {
        mutable index_2 = 0;

        while index_2 < size
        {
            if index > 3
            {
                break 2;
            }

            print_integer(index_2);
            index += 1;
        }

        print_integer(index);
    }
}

---

(Module
  (Module_head
    (Module_declaration
      (Module_name
        (Identifier_with_dots
          (Identifier))))
    (Import
      (Import_name
        (Identifier_with_dots
          (Identifier)
          (Identifier)))
      (Import_alias
        (Identifier))))
  (Declaration
    (Function
      (Function_declaration
        (Function_name
          (Identifier))
        (Function_input_parameters
          (Function_parameter
            (Function_parameter_name
              (Identifier))
            (Function_parameter_type
              (Type
                (Type_name
                  (Identifier))))))
        (Function_output_parameters))
      (Function_definition
        (Block
          (Statement
            (Expression_call
              (Generic_expression
                (Expression_access
                  (Generic_expression
                    (Expression_variable
                      (Variable_name
                        (Identifier))))
                  (Expression_access_member_name
                    (Identifier))))
              (Expression_call_arguments
                (Generic_expression_or_instantiate
                  (Generic_expression
                    (Expression_constant
                      (String))))
                (Generic_expression_or_instantiate
                  (Generic_expression
                    (Expression_variable
                      (Variable_name
                        (Identifier))))))))))))
  (Declaration
    (Function
      (Function_declaration
        (Function_name
          (Identifier))
        (Function_input_parameters
          (Function_parameter
            (Function_parameter_name
              (Identifier))
            (Function_parameter_type
              (Type
                (Type_name
                  (Identifier))))))
        (Function_output_parameters))
      (Function_definition
        (Block
          (Statement
            (Expression_for_loop
              (Expression_for_loop_head
                (Expression_for_loop_variable
                  (Identifier))
                (Expression_for_loop_range_begin
                  (Expression_for_loop_number_expression
                    (Expression_constant
                      (Number))))
                (Expression_for_loop_range_end
                  (Expression_for_loop_number_expression
                    (Expression_variable
                      (Variable_name
                        (Identifier))))))
              (Expression_for_loop_statements
                (Statement
                  (Expression_if
                    (Generic_expression
                      (Expression_binary
                        (Generic_expression
                          (Expression_variable
                            (Variable_name
                              (Identifier))))
                        (Generic_expression
                          (Expression_constant
                            (Number)))))
                    (Expression_if_statements
                      (Statement
                        (Expression_break)))))
                (Statement
                  (Expression_call
                    (Generic_expression
                      (Expression_variable
                        (Variable_name
                          (Identifier))))
                    (Expression_call_arguments
                      (Generic_expression_or_instantiate
                        (Generic_expression
                          (Expression_variable
                            (Variable_name
                              (Identifier)))))))))))
          (Statement
            (Expression_for_loop
              (Expression_for_loop_head
                (Expression_for_loop_variable
                  (Identifier))
                (Expression_for_loop_range_begin
                  (Expression_for_loop_number_expression
                    (Expression_constant
                      (Number))))
                (Expression_for_loop_range_end
                  (Expression_for_loop_number_expression
                    (Expression_variable
                      (Variable_name
                        (Identifier))))))
              (Expression_for_loop_statements
                (Statement
                  (Expression_variable_declaration
                    (Expression_variable_mutability)
                    (Variable_name
                      (Identifier))
                    (Generic_expression
                      (Expression_constant
                        (Number)))))
                (Statement
                  (Expression_while_loop
                    (Generic_expression
                      (Expression_binary
                        (Generic_expression
                          (Expression_variable
                            (Variable_name
                              (Identifier))))
                        (Generic_expression
                          (Expression_variable
                            (Variable_name
                              (Identifier))))))
                    (Expression_while_loop_statements
                      (Statement
                        (Expression_if
                          (Generic_expression
                            (Expression_binary
                              (Generic_expression
                                (Expression_variable
                                  (Variable_name
                                    (Identifier))))
                              (Generic_expression
                                (Expression_constant
                                  (Number)))))
                          (Expression_if_statements
                            (Statement
                              (Expression_break)))))
                      (Statement
                        (Expression_call
                          (Generic_expression
                            (Expression_variable
                              (Variable_name
                                (Identifier))))
                          (Expression_call_arguments
                            (Generic_expression_or_instantiate
                              (Generic_expression
                                (Expression_variable
                                  (Variable_name
                                    (Identifier))))))))
                      (Statement
                        (Expression_assignment
                          (Generic_expression
                            (Expression_variable
                              (Variable_name
                                (Identifier))))
                          (Expression_assignment_symbol)
                          (Generic_expression_or_instantiate
                            (Generic_expression
                              (Expression_constant
                                (Number)))))))))
                (Statement
                  (Expression_call
                    (Generic_expression
                      (Expression_variable
                        (Variable_name
                          (Identifier))))
                    (Expression_call_arguments
                      (Generic_expression_or_instantiate
                        (Generic_expression
                          (Expression_variable
                            (Variable_name
                              (Identifier)))))))))))
          (Statement
            (Expression_for_loop
              (Expression_for_loop_head
                (Expression_for_loop_variable
                  (Identifier))
                (Expression_for_loop_range_begin
                  (Expression_for_loop_number_expression
                    (Expression_constant
                      (Number))))
                (Expression_for_loop_range_end
                  (Expression_for_loop_number_expression
                    (Expression_variable
                      (Variable_name
                        (Identifier))))))
              (Expression_for_loop_statements
                (Statement
                  (Expression_variable_declaration
                    (Expression_variable_mutability)
                    (Variable_name
                      (Identifier))
                    (Generic_expression
                      (Expression_constant
                        (Number)))))
                (Statement
                  (Expression_while_loop
                    (Generic_expression
                      (Expression_binary
                        (Generic_expression
                          (Expression_variable
                            (Variable_name
                              (Identifier))))
                        (Generic_expression
                          (Expression_variable
                            (Variable_name
                              (Identifier))))))
                    (Expression_while_loop_statements
                      (Statement
                        (Expression_if
                          (Generic_expression
                            (Expression_binary
                              (Generic_expression
                                (Expression_variable
                                  (Variable_name
                                    (Identifier))))
                              (Generic_expression
                                (Expression_constant
                                  (Number)))))
                          (Expression_if_statements
                            (Statement
                              (Expression_break
                                (Expression_break_loop_count
                                  (Number)))))))
                      (Statement
                        (Expression_call
                          (Generic_expression
                            (Expression_variable
                              (Variable_name
                                (Identifier))))
                          (Expression_call_arguments
                            (Generic_expression_or_instantiate
                              (Generic_expression
                                (Expression_variable
                                  (Variable_name
                                    (Identifier))))))))
                      (Statement
                        (Expression_assignment
                          (Generic_expression
                            (Expression_variable
                              (Variable_name
                                (Identifier))))
                          (Expression_assignment_symbol)
                          (Generic_expression_or_instantiate
                            (Generic_expression
                              (Expression_constant
                                (Number)))))))))
                (Statement
                  (Expression_call
                    (Generic_expression
                      (Expression_variable
                        (Variable_name
                          (Identifier))))
                    (Expression_call_arguments
                      (Generic_expression_or_instantiate
                        (Generic_expression
                          (Expression_variable
                            (Variable_name
                              (Identifier))))))))))))))))
