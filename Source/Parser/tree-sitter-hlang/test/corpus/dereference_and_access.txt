=========================
Dereference and access
=========================

module Dereference_and_access;

struct My_struct
{
    a: Int32 = 0;
}

export function run() -> ()
{
    var instance: My_struct = {};
    var pointer = &instance;
    var a = pointer->a;
}

---

(Module
  (Module_head
    (Module_declaration
      (Module_name
        (Identifier_with_dots
          (Identifier)))))
  (Declaration
    (Struct
      (Struct_name
        (Identifier))
      (Struct_members
        (Struct_member
          (Struct_member_name
            (Identifier))
          (Struct_member_type
            (Type
              (Type_name
                (Identifier))))
          (Generic_expression_or_instantiate
            (Generic_expression
              (Expression_constant
                (Number))))))))
  (Declaration
    (Function
      (Function_declaration
        (Function_name
          (Identifier))
        (Function_input_parameters)
        (Function_output_parameters))
      (Function_definition
        (Block
          (Statement
            (Expression_variable_declaration_with_type
              (Expression_variable_mutability)
              (Variable_name
                (Identifier))
              (Expression_variable_declaration_type
                (Type
                  (Type_name
                    (Identifier))))
              (Generic_expression_or_instantiate
                (Expression_instantiate
                  (Expression_instantiate_members)))))
          (Statement
            (Expression_variable_declaration
              (Expression_variable_mutability)
              (Variable_name
                (Identifier))
              (Generic_expression
                (Expression_unary
                  (Expression_unary_symbol)
                  (Generic_expression
                    (Expression_variable
                      (Variable_name
                        (Identifier))))))))
          (Statement
            (Expression_variable_declaration
              (Expression_variable_mutability)
              (Variable_name
                (Identifier))
              (Generic_expression
                (Expression_dereference_and_access
                  (Generic_expression
                    (Expression_variable
                      (Variable_name
                        (Identifier))))
                  (Identifier))))))))))
