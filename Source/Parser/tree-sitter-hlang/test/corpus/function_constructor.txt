=========================
Function constructor
=========================

module Function_constructor;

export function_constructor add(value_type: Type)
{
    return function (first: value_type, second: value_type) -> (result: value_type)
    {
        return first + second;
    };
}

function run() -> ()
{
    var a = add<Int32>;
    var b = add<Int32>(1, 2);
    var c = add<Float32>(3.0f32, 4.0f32);
}

---

(Module
  (Module_head
    (Module_declaration
      (Module_name
        (Identifier_with_dots
          (Identifier)))))
  (Declaration
    (Function_constructor
      (Function_constructor_name
        (Identifier))
      (Function_constructor_parameters
        (Function_parameter
          (Function_parameter_name
            (Identifier))
          (Function_parameter_type
            (Type
              (Type_name
                (Identifier))))))
      (Block
        (Statement
          (Expression_return
            (Generic_expression_or_instantiate
              (Generic_expression
                (Expression_function
                  (Function_input_parameters
                    (Function_parameter
                      (Function_parameter_name
                        (Identifier))
                      (Function_parameter_type
                        (Type
                          (Type_name
                            (Identifier)))))
                    (Function_parameter
                      (Function_parameter_name
                        (Identifier))
                      (Function_parameter_type
                        (Type
                          (Type_name
                            (Identifier))))))
                  (Function_output_parameters
                    (Function_parameter
                      (Function_parameter_name
                        (Identifier))
                      (Function_parameter_type
                        (Type
                          (Type_name
                            (Identifier))))))
                  (Block
                    (Statement
                      (Expression_return
                        (Generic_expression_or_instantiate
                          (Generic_expression
                            (Expression_binary
                              (Generic_expression
                                (Expression_variable
                                  (Variable_name
                                    (Identifier))))
                              (Generic_expression
                                (Expression_variable
                                  (Variable_name
                                    (Identifier))))))))))))))))))
  (Declaration
    (Function
      (Function_declaration
        (Function_name
          (Identifier))
        (Function_input_parameters)
        (Function_output_parameters))
      (Function_definition
        (Block
          (Statement
            (Expression_variable_declaration
              (Expression_variable_mutability)
              (Variable_name
                (Identifier))
              (Generic_expression
                (Expression_instance_call
                  (Generic_expression
                    (Expression_variable
                      (Variable_name
                        (Identifier))))
                  (Expression_instance_call_parameter
                    (Expression_type
                      (Type
                        (Type_name
                          (Identifier)))))))))
          (Statement
            (Expression_variable_declaration
              (Expression_variable_mutability)
              (Variable_name
                (Identifier))
              (Generic_expression
                (Expression_call
                  (Generic_expression
                    (Expression_instance_call
                      (Generic_expression
                        (Expression_variable
                          (Variable_name
                            (Identifier))))
                      (Expression_instance_call_parameter
                        (Expression_type
                          (Type
                            (Type_name
                              (Identifier)))))))
                  (Expression_call_arguments
                    (Generic_expression_or_instantiate
                      (Generic_expression
                        (Expression_constant
                          (Number))))
                    (Generic_expression_or_instantiate
                      (Generic_expression
                        (Expression_constant
                          (Number)))))))))
          (Statement
            (Expression_variable_declaration
              (Expression_variable_mutability)
              (Variable_name
                (Identifier))
              (Generic_expression
                (Expression_call
                  (Generic_expression
                    (Expression_instance_call
                      (Generic_expression
                        (Expression_variable
                          (Variable_name
                            (Identifier))))
                      (Expression_instance_call_parameter
                        (Expression_type
                          (Type
                            (Type_name
                              (Identifier)))))))
                  (Expression_call_arguments
                    (Generic_expression_or_instantiate
                      (Generic_expression
                        (Expression_constant
                          (Number))))
                    (Generic_expression_or_instantiate
                      (Generic_expression
                        (Expression_constant
                          (Number))))))))))))))
